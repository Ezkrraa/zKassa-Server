Project zKassa_database {
  database_type: 'SQLite'
  Note: 'This will store employees, transaction copies and products.'
}


Table employees {
    id int [pk] // int
    username varchar // the employee's code
    role int
    store_id varchar [ref: > stores.id]
    // location_id LATER
}

Table extra_permissions {
    employee_id int [ref: > employees.id] // int
    action_id int
    Note: '''Only checked if role is insufficient for an action.'''
}

Table products {
    id varchar [pk] // uuid
    category_id varchar [ref: > categories.name]
    name varchar
    price int // money type?
    box_amount int
    deposit double // money type, amount of deposit
    plastic_tax double // money type, amount of deposit
    tax_amount double // money type, amount of deposit
}

Table categories {
    name varchar [pk]
}

Table product_price_log {
    id varchar [ref: > products.id]
    price float
    set_at datetime
}

Table ean_codes {
    product_id varchar [ref: > products.id]
    ean_code int
}

Table stores {
    id varchar //uuid
    name varchar
    d_center_id varchar [ref: > distribution_centers.id]
}

Table distribution_centers {
    id varchar
    name varchar
}

Table product_statuses {
    product_id varchar [ref: > products.id] // uuid
    d_center_id varchar [ref: > distribution_centers.id]
    status int
    set_at timestamp
}

Table transaction_items {
    product_id varchar [ref: > products.id] // uuid
    transaction_id varchar [ref: > transactions.id] // uuid
    price_paid float
    quantity int
}

Table transactions {
    id varchar [pk]
    store_id varchar [ref: > stores.id]
    sold_at timestamp
    paid_at timestamp
}


// points to an item in transaction_items that was returned
Table returned_items {
    return_transaction_id varchar [ref: > return_transactions.id]
    transaction_item_id varchar [ref: - transaction_items.product_id]
    return_reason int // enum??
}

Table return_transactions {
    id varchar [pk]
    transaction_id varchar [ref: > transactions.id] // the transaction we're returning from
    returned_at timestamp
    transaction_finished bool
}